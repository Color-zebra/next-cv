@import "./breakpoints";

$maxWidth: 1440;
$minWidth: 320;
$minHeightForFullPageScroll: 800px;

@mixin adaptiv-value($property, $startSize, $minSize) {
  $addSize: $startSize - $minSize;

  #{$property}: calc(
    #{$minSize + px} + #{$addSize} *
      ((100vw - #{$minWidth + px}) / #{$maxWidth - $minWidth})
  );

  @media screen and (min-width: #{$maxWidth + px}) {
    #{$property}: #{$startSize + px};
  }
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "There is no `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin hover {
  @media (hover: hover) {
    &:not([disabled]):hover {
      @content;
    }
  }
}

@mixin shadow-text() {
  text-shadow:
    0 0 10px var(--bg-color),
    0 0 10px var(--bg-color),
    0 0 10px var(--bg-color),
    0 0 10px var(--bg-color);
}

@mixin full-height() {
  min-height: calc(100dvh - var(--header-height));
}

@mixin fill-page-scroll() {
  @media screen and (min-height: $minHeightForFullPageScroll) {
    scroll-snap-align: start;
    scroll-snap-stop: always;
  }
}
